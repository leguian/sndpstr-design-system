// FlexGrid
.full {
  margin:0 auto;
}
.full {
  max-width:$site-width;
  width:100%;
}

// Grid
.grid {
  position:relative;
  display:-webkit-flex;
  display:flex;
  -webkit-backface-visibility:hidden;
  backface-visibility:hidden;
  -webkit-flex-flow:row wrap;
  flex-flow:row wrap;
}
.nowrap {
  -webkit-flex-wrap:nowrap;
  flex-wrap:nowrap;
}
.wrap-reverse {
  -webkit-flex-wrap:wrap-reverse;
  flex-wrap:wrap-reverse;
}

// Justify grid
.justify-start {
  -webkit-justify-content:flex-start;
  justify-content:flex-start;
}
.justify-end {
  -webkit-justify-content:flex-end;
  justify-content:flex-end;
}
.justify-center {
  -webkit-justify-content:center;
  justify-content:center;
}
.justify-space {
  -webkit-justify-content:space-between;
  justify-content:space-between;
}
.justify-around {
  -webkit-justify-content:space-around;
  justify-content:space-around;
}

// Grid Direction
.reverse {
  -webkit-flex-direction:row-reverse;
  flex-direction:row-reverse;
}
.vertical {
  -webkit-flex-direction:column;
  flex-direction:column;
  -webkit-flex-wrap:nowrap;
  flex-wrap:nowrap;
  &.reverse {
    -webkit-flex-direction:column-reverse;
    flex-direction:column-reverse;
    -webkit-flex-wrap:nowrap;
    flex-wrap:nowrap;
  }
}

// Functions
$celladjust:$cell-margin*2;

$cell-sizes:  (
                (twelve, 12),
                (eleven, 11),
                (ten, 10),
                (nine, 9),
                (eight, 8),
                (seven, 7),
                (six, 6),
                (five, 5),
                (four, 4),
                (three, 3),
                (two, 2),
                (one, 1)
);

@mixin sizing($size) {

  // Visibilty
  .#{$size}hide { display:none!important;}
  .#{$size}show { display:inherit!important;}

  // Typography
  .#{$size}text-left {text-align:left;}
  .#{$size}text-right {text-align:right;}
  .#{$size}text-center {text-align:center;}
  .#{$size}text-justify {text-align:justify;}


  @each $size-text, $size-int in $cell-sizes {

    // Create Cell Sizes
    .#{$size}#{$size-text} {
      max-width:calc( 100%/12 * #{$size-int} - #{$celladjust} );
      flex: 0 0 calc( 100%/12 * #{$size-int} - #{$celladjust} );
      &.collapse {
        max-width:calc( 100%/12 * #{$size-int} );
        flex: 0 0 calc( 100%/12 * #{$size-int} );
      }
    }

    // Create Cell ordering
    .#{$size}order-#{$size-int}  {-webkit-order:#{$size-int};order:#{$size-int};}
  }

  .#{$size}fifth {
    max-width:calc( 20% - #{$celladjust} );
    flex: 0 0 calc( 20% - #{$celladjust} );
    &.collapse {
      max-width:20%;
      flex: 0 0 20%;
    }
  }

}

// Alignment
.align-top {
  -webkit-align-items:flex-start;
  align-items:flex-start;
  -webkit-align-self:flex-start;
  align-self:flex-start;
}
.align-bottom {
  -webkit-align-items:flex-end;
  align-items:flex-end;
  -webkit-align-self:flex-end;
  align-self:flex-end;
}
.align-center {
  -webkit-align-items:center;
  align-items:center;
  -webkit-align-self:center;
  align-self:center;
}
.align-baseline {
  -webkit-align-items:baseline;
  align-items:baseline;
}
.align-stretch {
  -webkit-align-items:stretch;
  align-items:stretch;
}


// Cells
.cell {
  -webkit-flex:1 1 auto;
  flex:1 1 auto;
  min-height:0px;
  min-width:0px;
  max-width:100%;
  margin-left:$cell-margin;
  margin-right:$cell-margin;
  padding-left:$cell-padding;
  padding-right:$cell-padding;
  &.fit {
    -webkit-flex:0 0 auto;
    flex:0 0 auto;
    width:auto;
  }
  &.fill {
    -webkit-flex:1 1;
    flex:1 1;
    width:auto;
  }
  &.collapse {
    margin-left:0;
    margin-right:0;
  }
  &.collapse-padding {
    padding-left:0;
    padding-right:0;
  }
}

@include sizing(null);

// Media Queries
@media #{$small} {
  @include sizing(small-);
}

@media #{$medium} {
  @include sizing(medium-);

  // VW Headers
  .super-header.vw {font-size:5vw;}
  .h1.vw {font-size:3.5vw;}
  .h2.vw {font-size:3vw;}
  .h3.vw {font-size:2.5vw;}
  .h4.vw {font-size:2vw;}
  .h5.vw {font-size:1.5vw;}
}

@media #{$large} {
  @include sizing(large-);
}

@media #{$xlarge} {
  @include sizing(xlarge-);
}